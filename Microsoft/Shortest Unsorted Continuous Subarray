class Solution:
    def findUnsortedSubarray(self, nums: List[int]) -> int:
        rightIndex = -1
        leftIndex = -1
        size = len(nums)

        for i in range(size - 1):
            if nums[i] > nums[i + 1]:
                leftIndex = i
                break

        for i in range(size - 1, 0, -1):
            if nums[i - 1] > nums[i]:
                rightIndex = i
                break
       
     
        if leftIndex == size - 1:
            return 0
        elif leftIndex == -1 and rightIndex == -1:
            return 0

        mini = min(nums[leftIndex : rightIndex + 1])
        maxi = max(nums[leftIndex : rightIndex + 1])

        
        while rightIndex < size - 1 and nums[rightIndex + 1] < maxi:
            rightIndex += 1
        
        while leftIndex > 0 and nums[leftIndex - 1] > mini:
            leftIndex -= 1


        return rightIndex - leftIndex + 1
